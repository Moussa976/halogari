{% extends 'base.html.twig' %}

{% block title %}HaloGari | Créer un compte
{% endblock %}

{% block stylesheets %}
	<style>
		ul li {
			color: #dc3545 !important;
		}
	</style>
{% endblock %}

{% block body %}
	<div class="container pt-3 pb-5">
		<div class="row justify-content-center">
			<div class="col-md-6">
				<h1 class="mb-4 text-center">Créer un compte</h1>
				{% for flash_error in app.flashes('verify_email_error') %}
					<div class="alert alert-danger" role="alert">{{ flash_error }}</div>
				{% endfor %}

				{{ form_start(registrationForm, {
    attr: {
        class: 'bg-light p-4 rounded shadow-sm border needs-validation',
        novalidate: 'novalidate'
    }
}) }}

{% if not registrationForm.vars.valid %}
    <div class="alert alert-danger">
        <strong>Le formulaire contient des erreurs</strong>
        <ul class="mb-0">
            {% for field in registrationForm %}
                {% for error in field.vars.errors %}
                    <li>{{ error.message }}</li>
                {% endfor %}
            {% endfor %}
        </ul>
    </div>
{% endif %}

<div class="mb-3">
    {{ form_label(registrationForm.nom, 'Nom :', {'label_attr': {'class': 'form-label'}}) }}
    {{ form_widget(registrationForm.nom, {
        attr: {
            class: 'form-control ' ~ (registrationForm.nom.vars.valid == false ? 'is-invalid' : ''),
            placeholder: 'Votre nom',
            'aria-describedby': 'nomFeedback'
        }
    }) }}
    <div id="nomFeedback" class="invalid-feedback">{{ form_errors(registrationForm.nom) }}</div>
</div>

<div class="mb-3">
    {{ form_label(registrationForm.prenom, 'Prénom :', {'label_attr': {'class': 'form-label'}}) }}
    {{ form_widget(registrationForm.prenom, {
        attr: {
            class: 'form-control ' ~ (registrationForm.prenom.vars.valid == false ? 'is-invalid' : ''),
            placeholder: 'Votre prénom',
            'aria-describedby': 'prenomFeedback'
        }
    }) }}
    <div id="prenomFeedback" class="invalid-feedback">{{ form_errors(registrationForm.prenom) }}</div>
</div>

<div class="mb-3">
    {{ form_label(registrationForm.email, 'Adresse e-mail :', {'label_attr': {'class': 'form-label'}}) }}
    {{ form_widget(registrationForm.email, {
        attr: {
            class: 'form-control ' ~ (registrationForm.email.vars.valid == false ? 'is-invalid' : ''),
            placeholder: 'exemple@halogari.yt',
            'aria-describedby': 'emailFeedback'
        }
    }) }}
    <div id="emailFeedback" class="invalid-feedback">{{ form_errors(registrationForm.email) }}</div>
</div>

<div class="mb-3">
    {{ form_label(registrationForm.plainPassword.first, 'Mot de passe :', {'label_attr': {'class': 'form-label'}}) }}
    {{ form_widget(registrationForm.plainPassword.first, {
        attr: {
            class: 'form-control ' ~ (registrationForm.plainPassword.first.vars.valid == false ? 'is-invalid' : ''),
            placeholder: '*****************',
            'aria-describedby': 'passwordFeedback'
        }
    }) }}
    <div id="passwordFeedback" class="invalid-feedback">{{ form_errors(registrationForm.plainPassword.first) }}</div>
</div>

<div class="mb-3">
    {{ form_label(registrationForm.plainPassword.second, 'Confirmer le mot de passe :', {'label_attr': {'class': 'form-label'}}) }}
    {{ form_widget(registrationForm.plainPassword.second, {
        attr: {
            class: 'form-control ' ~ (registrationForm.plainPassword.second.vars.valid == false ? 'is-invalid' : ''),
            placeholder: '*****************',
            'aria-describedby': 'confirmPasswordFeedback'
        }
    }) }}
    <div id="confirmPasswordFeedback" class="invalid-feedback">{{ form_errors(registrationForm.plainPassword.second) }}</div>
</div>

<div class="mb-3">
    {{ form_label(registrationForm.telephone, 'Téléphone :', {'label_attr': {'class': 'form-label'}}) }}
    {{ form_widget(registrationForm.telephone, {
        attr: {
            class: 'form-control ' ~ (registrationForm.telephone.vars.valid == false ? 'is-invalid' : ''),
            placeholder: '0639******',
            'aria-describedby': 'telephoneFeedback'
        }
    }) }}
    <div id="telephoneFeedback" class="invalid-feedback">{{ form_errors(registrationForm.telephone) }}</div>
</div>

<div class="form-check mb-3">
    {{ form_widget(registrationForm.agreeTerms, {
        attr: {
            class: 'form-check-input ' ~ (registrationForm.agreeTerms.vars.valid == false ? 'is-invalid' : ''),
            'aria-describedby': 'termsFeedback'
        }
    }) }}
    <label class="form-check-label" for="{{ registrationForm.agreeTerms.vars.id }}">
        J'accepte les <a href="{{ path('app_conditionsutisation') }}" target="_blank">conditions d'utilisation</a>.
    </label>
    <div id="termsFeedback" class="invalid-feedback">{{ form_errors(registrationForm.agreeTerms) }}</div>
</div>


<div class="text-center">
    <button type="submit" class="btn btn-orange">S'inscrire</button>
</div>

<hr>
<p class="text-center">
    <small>Déjà inscrit ?</small>
</p>
<div class="text-center">
    <a class="btn btn-success" href="{{ path('app_login') }}" role="button">
        <i class="bi bi-box-arrow-in-right"></i>
        Se connecter
    </a>
</div>

{{ form_end(registrationForm) }}


			</div>
		</div>
	</div>

{% endblock %}
   {% block javascripts %}
   
<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(() => {
  'use strict'

  // Fetch all the forms we want to apply custom Bootstrap validation styles to
  const forms = document.querySelectorAll('.needs-validation')

  // Loop over them and prevent submission
  Array.from(forms).forEach(form => {
    form.addEventListener('submit', event => {
      if (!form.checkValidity()) {
        event.preventDefault()
        event.stopPropagation()
      }

      form.classList.add('was-validated')
    }, false)
  })
})()
</script>{% endblock %}