{% extends 'base.html.twig' %}

{% block title %}Paiement HaloGari
{% endblock %}

{% block body %}
<div class="container py-5 ">
  <div class="row justify-content-center align-items-center g-2">
    <div class="col-lg-5 mt-4">
      <div class="card shadow p-4">

        <h2 class="text-center mb-4 text-primary">Paiement de votre réservation</h2>

        {# -- Bloc récapitulatif -- #}
        <div class="border rounded p-3 bg-light mb-4">
          <h5 class="text-orange fw-bold mb-3">📝 Récapitulatif de la réservation</h5>
          <div class="row">
            <div class="col-md-6">
              <p>
                <strong>Départ :</strong>
                {{ reservation.trajet.depart }}
              </p>
              <p>
                <strong>Arrivée :</strong>
                {{ reservation.trajet.arrivee }}
              </p>
            </div>
            <div class="col-md-6">
              <p>
                <strong>Date :</strong>
                {{ reservation.trajet.dateTrajet|date_fr('d F Y') }}
              </p>
              <p>
                <strong>Heure :</strong>
                {{ reservation.trajet.heureTrajet|date('H:i') }}
              </p>
            </div>
          </div>
          <p>
            <strong>Places réservées :</strong>
            {{ reservation.places }}
          </p>
        </div>

        {# -- Paiement -- #}
        <form id="payment-form">
          <div class="mb-3">
            <label for="card-element" class="form-label">Carte bancaire</label>
            <div id="card-element" class="form-control" style="padding: 10px;"></div>
          </div>

          <div class="text-center mt-3 mb-2">
            <strong>Montant à payer :</strong>
            <span class="text-success">{{ total|number_format(2, '.', ' ') }}
              €</span>
          </div>

          <button class="btn btn-primary w-100">Payer maintenant</button>
          <div id="payment-result" class="mt-3"></div>
        </form>

      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
<script src="https://js.stripe.com/v3/"></script>
<script>
  // 🔐 Initialisation Stripe avec ta clé publique
  const stripe = Stripe('{{ stripePublicKey }}');
  const elements = stripe.elements();
  const card = elements.create('card');
  card.mount('#card-element');

  const form = document.getElementById('payment-form');
  const resultDiv = document.getElementById('payment-result');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    resultDiv.innerHTML = ''; // 🔁 Réinitialise les messages

    // 🔄 Lancement du paiement via Stripe
    const { error, paymentIntent } = await stripe.confirmCardPayment('{{ clientSecret }}', {
      payment_method: {
        card: card,
        billing_details: {
          name: '{{ reservation.passager.nom ~ ' ' ~ reservation.passager.prenom }}',
          email: '{{ reservation.passager.email }}'
        }
      }
    });

    // 🔍 Gère les erreurs Stripe côté client (ex : carte refusée)
    if (error) {
      resultDiv.innerHTML = `
        <div class="alert alert-danger">
          ❌ Paiement refusé : ${error.message}
        </div>
      `;
      console.warn('[Stripe error]', error); // Console dev

    } else if (paymentIntent.status === 'requires_capture') {
      // ✅ Paiement autorisé (fonds bloqués, mais non capturés)
      resultDiv.innerHTML = `
        <div class="alert alert-success">
          ✅ Paiement autorisé avec succès. Redirection...
        </div>
      `;

      // 🔁 Redirection vers page de confirmation
      setTimeout(() => {
        window.location.href = '{{ path("paiement_confirmation", { id: reservation.id }) }}';
      }, 1500);
    } else {
      // 🟡 Statut inattendu (rare mais utile pour debug)
      resultDiv.innerHTML = `
        <div class="alert alert-warning">
          ⚠️ Paiement en statut inattendu : ${paymentIntent.status}
        </div>
      `;
    }
  });
</script>
{% endblock %}
